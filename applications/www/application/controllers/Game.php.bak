<?php
defined('BASEPATH') or exit('No direct script access allowed');
class Game extends MY_Controller{
    public $app;
    private $session_name = 'game_openid';
    private $game_nickname = 'game_nickname';
    private $pid = 6;
    public function __construct(){
        parent::__construct();
        $this->load->model(array(
                'Model_game_log' => 'Mgame_log',
                'Model_lottery_users' => 'Mlottery_users'
        ));
        $this->app = C("appid_secret.dashi");
    }
    
    public function index(){
        $data = $this->data;
        $openid = trim($this->input->get('openid'));
        if(!empty($openid)){
            if($this->check_openid($openid)){
                $this->session->set_userdata($this->session_name, $openid);
                $data['status'] = 0;
            }else{
                $data['status'] = 1;
            }
        }else{
        	//提醒关注微信
        	$data['status'] = 1;
        }
        //统计有玩家数量
        $sql = 'select count(*) as num from t_game_log where is_del = 0 group by openid';
        $query = $this->db->query($sql);
        $list = [];
    	foreach ($query->result_array() as $row){
    		$list[] = $row;
    	}
    	$data['game_num'] = count($list);

        //分享
        $data['title'] = "2049小游戏";
        $data['link'] = C("domain.www.url")."/game";
        $data['imgUrl'] = C("domain.www.url")."/static/game/images/mofang.png";
        $data['desc'] = "2049小游戏";
        
        $data['signPackage'] = $this->share($this->app['app_id'],$this->app['app_secret']);

        $this->load->view('game/index', $data);
    }

    /**
     * 获取排行榜 getrank
     * @author 254274509@qq.com
     */
    public function getrank(){
    	$sql = 'SELECT * FROM(select * from (select id,openid,game_time from t_game_log where is_del = 0 order by game_time limit 10) a group by a.openid) b ORDER BY b.game_time asc;';
    	$query = $this->db->query($sql);
    	$this->db->last_query();
    	$lists = [];
    	foreach ($query->result_array() as $row){
    		$lists[] = $row;
    	}
    	if(!$lists){
    		$this->return_json(['code' => 0, 'info' => 'nodata']);
    	}
    	//获取用户信息
    	$openids = array_column($lists, 'openid');
    	$user_list = $this->Mlottery_users->get_lists('openid,name', ['in' => ['openid' => $openids]]);
    	if($user_list){
    		foreach ($lists as $k => $v) {
    			$lists[$k]['name'] = '匿名用户';
    			foreach ($user_list as $key => $val) {
    				if($v['openid'] == $val['openid']){
    					$lists[$k]['name'] = $val['name'];
    				}
    			}
    		}
    	}
    	
    	$my_game_info = null;
    	//判断当前用户成绩是否在前十
    	if($this->session->has_userdata($this->session_name)){
    		$openid = $this->session->userdata($this->session_name);
    		foreach ($lists as $key => $val) {
    			if($openid == $val['openid']){
    				$my_game_info = $key;
    			}
    		}
    	}
    	$this->return_json(['code' => 1, 'info' => $lists, 'my_info' => $my_game_info]);
    }
    
    /**
     * 保存用户电话姓名
     * @return [type] [description]
     */
    public function update_user(){
    	$post = $this->input->post();
    	$up['name'] = trim($post['name']);
    	$up['tel'] = trim($post['tel']);
    	$openid = $this->session->userdata($this->session_name);
    	if(empty($openid)){
            $this->return_json(['code' => 0, 'msg' => '请先关注微信公众号！']);
        }
        if(empty($up['name'])){
            $this->return_json(['code' => 0, 'msg' => '姓名不能为空！']);
        }
        if(empty($up['tel'])){
            $this->return_json(['code' => 0, 'msg' => '电话不能为空！']);
        }
        if(!preg_match('/^1[3|4|5|8|7][0-9]\d{8}$/', $up['tel'])){
            $this->return_json(['code' => 0, 'msg' => '手机号格式不正确！']);
        }
        $res = $this->Mlottery_users->update_info($up, ['openid' => $openid,'create_time' => date('Y-m-d H:i:s'), 'pid' => $this->pid]);
        if(!$res){
            $this->return_json(['code' => 0, 'msg' => '请重试！']);
        }
        $this->return_json(['code' => 1, 'msg' => '完成']);
    }


    /**
     * 保存游戏成绩
     * @return [type] [description]
     */
    public function game_log(){
    	$openid = $this->session->userdata($this->session_name);
    	$post['game_time'] = trim($this->input->post('game_time'));
    	if(empty($openid)){
    		$this->return_json(['code' => 0, 'msg' => '请先关注微信公众号,回复“2049” 参与游戏！']);
    	}
    	//判断openid的有效性doto
    	if(!$this->check_openid($openid)){
    		$this->return_json(['code' => 0, 'msg' => '用户凭证失效，请重试！']);
    	}
    	if(empty($post['game_time'])){
    		$this->return_json(['code' => 0, 'msg' => '请先玩一把游戏再来提交成绩哦！']);
    	}
        if($post['game_time'] < 15){
            $this->return_json(['code' => 0, 'msg' => '请不要作弊哦！']);
        }
    	$post['openid'] = $openid;
		$res = $this->Mgame_log->create($post);
		if(!$res){
			$this->return_json(['code' => 0, 'msg' => '添加记录失败']);
		}
		$count = $this->Mgame_log->count(['openid' => $openid]);
		//如果是第一次添加游戏记录
        $status = -1;
		if($count == 1){
			$name = '';
			if($this->session->has_userdata($this->game_nickname)){
				$name = $this->session->userdata($this->game_nickname);
			}
			$this->Mlottery_users->create(['name' => $name,'create_time'=> date('Y-m-d H:i:s'),'openid' => $openid, 'pid' => $this->pid]);
			$status = 1;
		}
		$this->return_json(['code' => 1, 'status' => $status]);
    }

    /**
     * 验证用户open_id的有效性
     */
    PUBLIC function check_openid($open_id){
        if($this->session->has_userdata($this->game_nickname)){
            return true;
        }else{
            $access_token = $this->getAccessToken();
            $url = 'https://api.weixin.qq.com/cgi-bin/user/info?access_token='.$access_token.'&openid='.$open_id.'&lang=zh_CN';
            $res = json_decode($this->httpGet($url));
            if(isset($res->subscribe) && $res->subscribe == 1){
                //记录用户信息
                $nickname = $res->nickname;
                $this->session->set_userdata($this->game_nickname, $nickname);
                return true;
            }else{
                return false;
            }
        }
        
    }

    private function getAccessToken() {
        $this->load->driver('cache');
        if(!$this->cache->file->get('access_token')){
            $url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=".C('appid_secret.xitai.app_id')."&secret=".C('appid_secret.xitai.app_secret');
            $res = json_decode($this->httpGet($url));
            $access_token = $res->access_token;
            if ($access_token) {
                $this->cache->file->save('access_token', $access_token, 7200);
                return $access_token;
            }
        }else{
            return $this->cache->file->get('access_token');
        }  
    }

    private function httpGet($url) {
        $curl = curl_init();
        @curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        @curl_setopt($curl, CURLOPT_TIMEOUT, 500);
        // 为保证第三方服务器与微信服务器之间数据传输的安全性，所有微信接口采用https方式调用，必须使用下面2行代码打开ssl安全校验。
        // 如果在部署过程中代码在此处验证失败，请到 http://curl.haxx.se/ca/cacert.pem 下载新的证书判别文件。
        @curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, true);
        @curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, true);
        @curl_setopt($curl, CURLOPT_URL, $url);
    
        $res = curl_exec($curl);
        curl_close($curl);
    
        return $res;
    }
}

